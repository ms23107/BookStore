@using System.Security.Claims
@model BookStore.Models.Book

@{
    ViewData["Title"] = "Details";
}

<h1 class="my-4 text-center">Grāmatas Informācija</h1>

<div class="row justify-content-center">
    <div class="col-md-7">
        <div class="book-details p-4 bg-light rounded shadow-sm">
            <div class="row">
                <div class="col-12 col-md-6">
                    <h3 class="book-title">@Model.Title</h3>
                    <h5 class="book-author">@Model.Author</h5>
                    <div class="book-meta">
                        <p><strong>Valoda:</strong> @Model.Language</p>
                        <p><strong>Žanrs:</strong> @Model.Genre</p>
                        <p><strong>Ražotājs:</strong> @Model.Manufacturer</p>
                        <p><strong>ISBN:</strong> @Model.ISBN</p>
                        <p><strong>Publicēšanas datums:</strong> @Model.DatePublished.ToString("yyyy-MM-dd")</p>
                        <p><strong>Cena:</strong> @Model.Price.ToString("C", new System.Globalization.CultureInfo("fr-FR"))</p>
                    </div>
                    <div class="book-description">
                        <h5>Apraksts</h5>
                        <p>@Model.Description</p>
                    </div>
                    <div class="book-actions mt-4">
                        <a asp-action="Index" class="btn btn-warning btn-lg"><i class="fa-solid fa-arrow-left"></i> </a>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model.Id" class="btn btn-primary float-end store-btn"><i class="fa-solid fa-cart-shopping"></i></a>
                        }
                        else
                        {
                            <a href="javascript:void(0);" class="btn btn-primary float-end store-btn" onclick="showAuthModal()"><i class="fa-solid fa-cart-shopping"></i></a>
                        }
                    </div>
                </div>
                <div class="col-12 col-md-6 text-center">
                    <img src="@Model.ImageUrl" class="img-fluid rounded" alt="@Model.Title" />
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row justify-content-center mt-5">
    <div class="col-md-8">
        <div class="recommended-books p-4 bg-light rounded shadow-sm">
            <h3 class="mb-4">Ieteiktās grāmatas</h3>
            @if (ViewBag.RecommendedBooks != null && ((List<Book>)ViewBag.RecommendedBooks).Any())
            {
                <div class="row">
                    @foreach (var book in (List<Book>)ViewBag.RecommendedBooks)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card h-100">
                                <img src="@book.ImageUrl" class="card-img-top" alt="@book.Title">
                                <div class="card-body">
                                    <h5 class="card-title">@book.Title</h5>
                                    <p class="card-text">@book.Author</p>
                                    <p class="card-text"><small class="text-muted">@book.Price.ToString("C", new System.Globalization.CultureInfo("fr-FR"))</small></p>
                                    <a asp-controller="Store" asp-action="Details" asp-route-id="@book.Id" class="btn btn-primary">Skatīt vairāk</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">Nav ieteikumu.</p>
            }
        </div>
    </div>
</div>
<div class="row justify-content-center mt-5">
    <div class="col-md-8">
        <div class="review-section p-4 bg-light rounded shadow-sm">
            <h3 class="mb-4">Atsauksmes</h3>
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                foreach (var review in Model.Reviews)
                {
                    <div class="review-card mb-4 p-3 bg-white rounded shadow-sm">
                        <div class="review-header d-flex justify-content-between align-items-center mb-2">
                            <h5 class="review-user mb-0">@review.UserEmail</h5>
                            <div class="review-rating">
                                @for (int i = 0; i < review.Rating; i++)
                                {
                                    <span class="text-warning">★</span>
                                }
                                @for (int i = review.Rating; i < 5; i++)
                                {
                                    <span class="text-muted">★</span>
                                }
                            </div>
                            @if (User.Identity.IsAuthenticated && (User.FindFirstValue(ClaimTypes.Email) == review.UserEmail || User.IsInRole("Admin")))
                            {
                                <button class="btn btn-link text-danger p-0 delete-review-button" data-id="@review.Id">
                                    <i class="fa-solid fa-times"></i>
                                </button>
                            }
                        </div>
                        <p class="review-comment mb-2">@review.Comment</p>
                        <p class="review-date text-muted mb-0"><small>@review.ReviewDate.ToString("dd/MM/yyyy")</small></p>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">Nav atsauksmju.</p>
            }
            @if (User.Identity.IsAuthenticated)
            {
                <h4 class="mt-4">Pievienot atsauksmi</h4>
                <form asp-controller="Review" asp-action="Create" method="post">
                    <input type="hidden" name="bookId" value="@Model.Id" />
                    <div class="form-group mb-3">
                        <label for="comment" class="form-label">Jūsu atsauksme:</label>
                        <textarea class="form-control" name="comment" rows="3" required></textarea>
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label">Vērtējums:</label>
                        <div class="star-rating">
                            <span class="star" data-value="1">★</span>
                            <span class="star" data-value="2">★</span>
                            <span class="star" data-value="3">★</span>
                            <span class="star" data-value="4">★</span>
                            <span class="star" data-value="5">★</span>
                        </div>
                        <input type="hidden" name="rating" id="rating-value" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Iesniegt</button>
                </form>
            }
            else
            {
                <div class="alert alert-info mt-4">
                    Lai pievienotu atsauksmi, lūdzu, <a href="/Identity/Account/Login">autorizējieties</a> vai <a href="/Identity/Account/Register">reģistrējieties</a>.
                </div>
            }
        </div>
    </div>
</div>
<style>
    .recommended-books {
        background-color: #f8f9fa;
        border-radius: 10px;
    }

        .recommended-books .card {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            transition: transform 0.2s, box-shadow 0.2s;
        }

            .recommended-books .card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

        .recommended-books .card-img-top {
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
            height: 200px;
            object-fit: cover;
        }

        .recommended-books .card-body {
            padding: 1rem;
        }

        .recommended-books .card-title {
            font-size: 1.1rem;
            font-weight: 600;
        }

        .recommended-books .card-text {
            font-size: 0.9rem;
            color: #6c757d;
        }
    .review-section {
        background-color: #f8f9fa;
        border-radius: 10px;
    }

    .review-card {
        background-color: #fff;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .review-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .review-header {
        border-bottom: 1px solid #e9ecef;
        padding-bottom: 0.5rem;
    }

    .review-user {
        font-size: 1.1rem;
        font-weight: 600;
    }

    .review-rating {
        font-size: 1.2rem;
    }

    .review-comment {
        font-size: 1rem;
        color: #333;
    }

    .review-date {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .text-warning {
        color: #ffc107; 
    }

    .text-muted {
        color: #6c757d;
    }
    .star-rating {
        font-size: 2rem;
        color: #ddd;
        cursor: pointer;
    }

        .star-rating .star {
            transition: color 0.2s;
        }

            .star-rating .star:hover,
            .star-rating .star.active {
                color: #ffc107; 
            }
    .form-control {
        border-radius: 8px;
        border: 1px solid #ddd;
        transition: border-color 0.2s, box-shadow 0.2s;
    }

        .form-control:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 8px rgba(13, 110, 253, 0.25);
        }

    .delete-review-form .btn-link {
        text-decoration: none;
    }

        .delete-review-form .btn-link:hover {
            color: #dc3545 !important;
        }
    #deleteConfirmationModal .modal-header {
        background-color: #dc3545;
        color: white;
    }

    #deleteConfirmationModal .modal-title {
        font-weight: bold;
    }

    #deleteConfirmationModal .modal-body {
        font-size: 1.1rem;
    }

    #deleteConfirmationModal .modal-footer .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

        #deleteConfirmationModal .modal-footer .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }

    #deleteConfirmationModal .modal-footer .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

        #deleteConfirmationModal .modal-footer .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }
</style>
<div class="modal fade" id="authModal" tabindex="-1" aria-labelledby="authModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-gradient-primary text-white">
                <h5 class="modal-title" id="authModalLabel">
                    <i class="fas fa-exclamation-circle me-2"></i>Nepieciešama autorizācija
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="lead">
                    <i class="fas fa-info-circle text-primary me-2"></i>
                    Lai grāmatu pievienotu grozam, Jums ir jābūt autorizētam.
                </p>
                <p class="text-muted">
                    Lūdzu, autorizējaties vai reģistrējieties, lai turpinātu.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="modal-btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Aizvērt
                </button>
                <a href="/Identity/Account/Login" class="modal-btn-primary">
                    <i class="fas fa-sign-in-alt me-2"></i>Autorizēties
                </a>
                <a href="/Identity/Account/Register" class="modal-btn-success">
                    <i class="fas fa-user-plus me-2"></i>Reģistrācija
                </a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Dzēst atsauksmi
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="lead">Vai tiešām vēlaties dzēst šo atsauksmi?</p>
                <p class="text-muted">Šī darbība ir neatgriezeniska, un jūsu atsauksme tiks neatgriezeniski dzēsta.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Atcelt
                </button>
                <button type="button" id="confirmDeleteButton" class="btn btn-danger">
                    <i class="fas fa-trash me-2"></i>Dzēst
                </button>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const stars = document.querySelectorAll('.star-rating .star');
        const ratingInput = document.getElementById('rating-value');

        stars.forEach(star => {
            star.addEventListener('click', function () {
                const value = this.getAttribute('data-value');
                ratingInput.value = value;

                stars.forEach((s, index) => {
                    if (index < value) {
                        s.classList.add('active');
                    } else {
                        s.classList.remove('active');
                    }
                });
            });
        });
    });

    function showAuthModal() {
        const authModal = new bootstrap.Modal(document.getElementById('authModal'));
        authModal.show();
    }

       document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.delete-review-button');
        const deleteConfirmationModal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
        const confirmDeleteButton = document.getElementById('confirmDeleteButton');
        let reviewIdToDelete = null;
        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                reviewIdToDelete = this.getAttribute('data-id');
                deleteConfirmationModal.show();
            });
        });
        confirmDeleteButton.addEventListener('click', function () {
            if (reviewIdToDelete) {
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '/Review/Delete';

                const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const reviewIdInput = document.createElement('input');
                reviewIdInput.type = 'hidden';
                reviewIdInput.name = 'id';
                reviewIdInput.value = reviewIdToDelete;

                const csrfInput = document.createElement('input');
                csrfInput.type = 'hidden';
                csrfInput.name = '__RequestVerificationToken';
                csrfInput.value = csrfToken;

                form.appendChild(reviewIdInput);
                form.appendChild(csrfInput);
                document.body.appendChild(form);
                form.submit();
            }
        });
    });
</script>